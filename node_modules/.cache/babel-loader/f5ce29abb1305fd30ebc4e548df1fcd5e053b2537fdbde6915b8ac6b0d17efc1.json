{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Interview\\\\SprintPro Assignment\\\\birthdays-calendar\\\\src\\\\components\\\\calendar.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n// import TextField from '@mui/material/TextField';\n// import BirthdayList from './BirthdayList';\n\n// const Calendar: React.FC = () => {\n//   const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n\n//   return (\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\n//       <DatePicker\n//         value={selectedDate}\n//         onChange={(date) => setSelectedDate(date)}\n//         renderInput={(params) => <TextField {...params} />}\n//       />\n//       {selectedDate && <BirthdayList date={selectedDate} />}\n//     </LocalizationProvider>\n//   );\n// };\n\n// export default Calendar;\n\nimport React, { useState } from 'react';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport TextField from '@mui/material/TextField';\nimport './Calendar.css';\nimport BirthdayList from './BirthdayList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [searchTerm, setSearchTerm] = useState('');\n  const [favouriteBirthdays, setFavouriteBirthdays] = useState([]);\n  // const birthdays: string[] = [\n  //   \"CarryMinati, Indian YouTuber\",\n  //   \"Gustav Forsling, Swedish ice hockey player\",\n  //   \"Shonica Wharton, Barbadian netball player\",\n  //   \"Philippe Coutinho, Brazilian footballer\",\n  //   \"Allie DiMeco, American actress and musician\",\n  //   \"Avisail García, Venezuelan baseball player\",\n  //   \"Jrue Holiday, American basketball player\",\n  //   \"David Worrall, English footballer\",\n  //   \"Emma Eliasson, Swedish ice hockey player\",\n  //   \"Ibrahim Jeilan, Ethiopian runner\",\n  //   \"Eren Derdiyok, Swiss footballer\"\n  // ];\n\n  const addToFavourites = birthday => {\n    if (!favouriteBirthdays.includes(birthday)) {\n      setFavouriteBirthdays([...favouriteBirthdays, birthday]);\n    }\n  };\n  const filteredBirthdays = birthdays.filter(birthday => birthday.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Birthdays Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n            value: selectedDate,\n            onChange: newValue => setSelectedDate(newValue),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(BirthdayList, {\n            date: selectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Birthdays Calendar. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"9j+ey+7vAF2wpArp5YjhHI3xVWg=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","LocalizationProvider","DatePicker","AdapterDateFns","TextField","BirthdayList","jsxDEV","_jsxDEV","Calendar","_s","selectedDate","setSelectedDate","Date","searchTerm","setSearchTerm","favouriteBirthdays","setFavouriteBirthdays","addToFavourites","birthday","includes","filteredBirthdays","birthdays","filter","toLowerCase","children","className","fileName","_jsxFileName","lineNumber","columnNumber","dateAdapter","value","onChange","newValue","renderInput","params","date","_c","$RefreshReg$"],"sources":["D:/Coding/Interview/SprintPro Assignment/birthdays-calendar/src/components/calendar.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\n// import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\n// import TextField from '@mui/material/TextField';\r\n// import BirthdayList from './BirthdayList';\r\n\r\n// const Calendar: React.FC = () => {\r\n//   const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n\r\n//   return (\r\n//     <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n//       <DatePicker\r\n//         value={selectedDate}\r\n//         onChange={(date) => setSelectedDate(date)}\r\n//         renderInput={(params) => <TextField {...params} />}\r\n//       />\r\n//       {selectedDate && <BirthdayList date={selectedDate} />}\r\n//     </LocalizationProvider>\r\n//   );\r\n// };\r\n\r\n// export default Calendar;\r\n\r\nimport React, { useState } from 'react';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport TextField from '@mui/material/TextField';\r\nimport './Calendar.css';\r\nimport BirthdayList from './BirthdayList';\r\n\r\nconst Calendar: React.FC = () => {\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [favouriteBirthdays, setFavouriteBirthdays] = useState<string[]>([]);\r\n  // const birthdays: string[] = [\r\n  //   \"CarryMinati, Indian YouTuber\",\r\n  //   \"Gustav Forsling, Swedish ice hockey player\",\r\n  //   \"Shonica Wharton, Barbadian netball player\",\r\n  //   \"Philippe Coutinho, Brazilian footballer\",\r\n  //   \"Allie DiMeco, American actress and musician\",\r\n  //   \"Avisail García, Venezuelan baseball player\",\r\n  //   \"Jrue Holiday, American basketball player\",\r\n  //   \"David Worrall, English footballer\",\r\n  //   \"Emma Eliasson, Swedish ice hockey player\",\r\n  //   \"Ibrahim Jeilan, Ethiopian runner\",\r\n  //   \"Eren Derdiyok, Swiss footballer\"\r\n  // ];\r\n\r\n  const addToFavourites = (birthday: string) => {\r\n    if (!favouriteBirthdays.includes(birthday)) {\r\n      setFavouriteBirthdays([...favouriteBirthdays, birthday]);\r\n   }\r\n  };\r\n\r\n  const filteredBirthdays = birthdays.filter(birthday =>\r\n    birthday.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Birthdays Calendar</h1>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"calendar-container\">\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              value={selectedDate}\r\n              onChange={(newValue) => setSelectedDate(newValue)}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n            {selectedDate && <BirthdayList date={selectedDate} />}\r\n          </LocalizationProvider>\r\n        </div>\r\n        {/* <div className=\"birthdays-container\">\r\n          <h2>Birthdays on {selectedDate?.toLocaleDateString()}</h2>\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search birthdays...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <ul className=\"list-group\">\r\n            {filteredBirthdays.map((birthday, index) => (\r\n              <li key={index} className=\"list-group-item\">\r\n                {birthday}\r\n                <button onClick={() => addToFavourites(birthday)}>ADD TO FAVOURITES</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div> */}\r\n        {/* <div className=\"favourites-container\">\r\n          <h2>Favourite Birthdays</h2>\r\n          <ul className=\"list-group\">\r\n            {favouriteBirthdays.map((birthday, index) => (\r\n              <li key={index} className=\"list-group-item\">\r\n                {birthday}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>&copy; 2024 Birthdays Calendar. All rights reserved.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}